#include<iostream>
#include<cstring>

using namespace std;

const int N = 4e4 + 10;
int n,m,root;

int head[N],to[N * 2],last[N * 2],cnt;
void add(int a,int b){
    to[++cnt] = b;
    last[cnt] = head[a];
    head[a] = cnt;
}

int lg[N];
void logg(){
    for(int i = 1; i <= N; i++){
        lg[i] = lg[i - 1] + (i == (1 << lg[i - 1]));
    }
}

int fa[N][22],depth[N];
void dfs(int now,int last1){
    fa[now][0] = last1,depth[now] = depth[last1] + 1;
    for(int i = 1; i <= lg[depth[now]]; i++){
        fa[now][i] = fa[fa[now][i - 1]][i - 1];
    }   

    for(int i = head[now]; i != -1; i = last[i]){
        int j = to[i];
        if(j == last1) continue;
        dfs(j,now);
    }
}

int lca(int x,int y){
    if(depth[x] < depth[y]) swap(x,y);
    while(depth[x] > depth[y]){
        x = fa[x][lg[depth[x] - depth[y]] - 1];
    }
    if(x == y) return x;
    for(int k = lg[depth[x]] - 1; k >= 0; k--){
        if(fa[x][k] != fa[y][k]){
            x = fa[x][k],y = fa[y][k];
        }
    }
    return fa[x][0];
}

int main(){
    memset(head,-1,sizeof head);
    scanf("%d",&n);
    logg();
    for(int i = 1,x,y;i <= n; i++){
        scanf("%d%d",&x,&y);
        if(y == -1) root = x;
        else{
            add(x,y);
            add(y,x);
        }
    }

    dfs(root,0);

    scanf("%d",&m);
    for(int i = 1; i <= m; i++){
        int x,y;
        scanf("%d%d",&x,&y);
        int s = lca(x,y);
        if(s == x){
            printf("%d\n",1);
        }else if(s == y){
            printf("%d\n",2);
        }else{
            printf("%d\n",0);
        }
    }




    return 0;
}


//tarjan离线
#include<iostream>
#include<utility>
#include<cstring>
#include<vector>
#define x first
#define y second

using namespace std;

typedef pair<int,int> PII;

const int N = 4e4 + 10;

int n,m;

int head[N],to[N * 2],last[N * 2],cnt;
int fa[N],root;
int cxx[N],cxy[N];
void add(int a,int b){
    to[++cnt] = b;
    last[cnt] = head[a];
    head[a] = cnt;
}

int lg[N],flag[N],ans[N];
void init(){
    for(int i = 1; i <= N; i++){
        flag[i] = 0;
        fa[i] = i;
        lg[i] = lg[i - 1] + (i == (1 << lg[i - 1]));
    }
}

int get(int x){
    if(fa[x] == x) return x;
    return fa[x] = get(fa[x]);
}

vector<PII>v[N];
void dfs(int now,int last1){
    for(int i = head[now]; i != -1; i = last[i]){
        int j = to[i];
        if(j == last1) continue;
        dfs(j,now);
        fa[j] = now;
    }

    int len = v[now].size();
    for(int i = 0; i < len; i++){
        if(flag[v[now][i].x] == 1){
            ans[v[now][i].y] = get(v[now][i].x);
        }
    }
    flag[now] = 1;
}

int main(){
    memset(head,-1,sizeof head);
    scanf("%d",&n);
    init();
    for(int i = 1; i <= n; i++){
        int x,y;
        scanf("%d%d",&x,&y);
        if(y == -1){
            root = x;
        }else{
            add(x,y);
            add(y,x);
        }
    }

    scanf("%d",&m);
    for(int i = 1; i <= m; i++){
        scanf("%d%d",&cxx[i],&cxy[i]);
        v[cxx[i]].push_back({cxy[i],i});
        v[cxy[i]].push_back({cxx[i],i});
    }

    dfs(root,0);

    for(int i = 1; i <= m; i++){
        if(ans[i] == cxx[i]){
            printf("1\n");
        }else if(ans[i] == cxy[i]){
            printf("2\n");
        }else{
            printf("0\n");
        }
    }

    return 0;
} 

作者：Lqingyi
链接：https://www.acwing.com/activity/content/code/content/635459/
来源：AcWing
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。
