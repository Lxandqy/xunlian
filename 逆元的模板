首先是 x = 1(mod p)
如果x 和 p是互质的那就可以用费马小定理
#include<iostream>

using namespace std;

typedef long long ll;
const int N = 100010;
const ll mod = 1e9 + 7;
ll qc(ll a,ll b,ll p){
    ll s = 0;
    while(b){
        if(b & 1){
            s = (s + a) % p;
        }
        b >>= 1;
        a = (a + a) % p;
    }
    return s;
}
int main(){
	
	int x,p;
	cin >> x >> p;
	
    int invx;
    invx = ((x,p - 2) % p + p) % p;//防止是负数 
    
    
    return 0;
}

不然的话就用
#include<iostream>

using namespace std;

typedef long long ll;
const int N = 100010;
const ll mod = 1e9 + 7;

int exgcd(int a,int  b,int &x,int &y){
    if(b == 0){
        x = 1,y = 0;
        return a;
    }
    int x1,y1;
    int gcd = exgcd(b,a % b,x1,y1);
    x = y1, y = x1 - a / b * y1;
    return gcd;
}

int main(){
    int a,p;
    cin >> a >> p;//p为余数 
    
    int x,y;
    exgcd(a,p,x,y);
    
    //x即为  a的逆元 
    
    
    return 0;
}
