#include<iostream>
#include<cstring>

using namespace std;
const int N = 30;
int n,m,tape;
int state[N][N];

void floyd(int x,int y){
    for(int i = 0; i < n; i++){
        if(state[i][x]) state[i][y] = 1;
        if(state[y][i]) state[x][i] = 1;
        for(int j = 0; j < n; j++){
            if(state[i][x] && state[y][j]){
                state[i][j] = 1;
            }
        }
    }
}

int check(){
    for(int i = 0; i < n; i++){
        if(state[i][i]) return 1;
    }

    for(int i = 0; i < n; i++){
        for(int j = 0; j < i; j++){
            if(!state[i][j] && !state[j][i]) return 0;
        }
    }

    return 2;
}

int st[N];
char get_char(){
    for(int i = 0; i < n; i++){
        bool flag = true;
        if(st[i]) continue;
        for(int j = 0; j < n; j++){
            if(st[j]) continue;
            if(state[j][i]){
                flag = false;
                break;
            }
        }
        if(flag){
            st[i] = 1;
            return (char)(i + 'A');
        }
    }
}

int main(){
    while(cin >> n >> m && n != 0 && m != 0){
        memset(state,0,sizeof state);
        memset(st,0,sizeof st);
        tape = 0;
        int s;
        for(int i = 1; i <= m; i++){
            char a,b,c;
            cin >> a >> b >> c;

            if(!tape){
                state[a - 'A'][c - 'A'] = 1;
                floyd(a - 'A',c - 'A');
                tape = check();
                if(tape){
                    s = i;
                }
            }
        }

        if(tape == 0) printf("Sorted sequence cannot be determined.\n");
        else if(tape == 1){
            printf("Inconsistency found after %d relations.\n",s);
        }else{
            printf("Sorted sequence determined after %d relations: ",s);
            for(int i = 1; i <= n; i++){
                printf("%c",get_char());
            }
            printf(".\n");
        }

    }


    return 0;
}

作者：Lqingyi
链接：https://www.acwing.com/activity/content/code/content/618786/
来源：AcWing
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。
